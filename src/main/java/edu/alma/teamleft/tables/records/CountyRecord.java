/*
 * This file is generated by jOOQ.
 */
package edu.alma.teamleft.tables.records;


import edu.alma.teamleft.tables.County;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountyRecord extends TableRecordImpl<CountyRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.county.county_id</code>.
     */
    public void setCountyId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.county.county_id</code>.
     */
    public Integer getCountyId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.county.county_name</code>.
     */
    public void setCountyName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.county.county_name</code>.
     */
    public String getCountyName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return County.COUNTY.COUNTY_ID;
    }

    @Override
    public Field<String> field2() {
        return County.COUNTY.COUNTY_NAME;
    }

    @Override
    public Integer component1() {
        return getCountyId();
    }

    @Override
    public String component2() {
        return getCountyName();
    }

    @Override
    public Integer value1() {
        return getCountyId();
    }

    @Override
    public String value2() {
        return getCountyName();
    }

    @Override
    public CountyRecord value1(Integer value) {
        setCountyId(value);
        return this;
    }

    @Override
    public CountyRecord value2(String value) {
        setCountyName(value);
        return this;
    }

    @Override
    public CountyRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountyRecord
     */
    public CountyRecord() {
        super(County.COUNTY);
    }

    /**
     * Create a detached, initialised CountyRecord
     */
    public CountyRecord(Integer countyId, String countyName) {
        super(County.COUNTY);

        setCountyId(countyId);
        setCountyName(countyName);
    }
}
